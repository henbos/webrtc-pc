{
  "dictionary-rtcconfiguration-members": [
    {
      "description": "Set default values of the <code>RTCConfiguration</code> dictionary, aligning it with current implementations",
      "pr": 2691,
      "type": "correction",
      "status": "candidate",
      "id": "1"
    },
    {
      "description": "Allow an implementation-defined limited to the number of configured ICE Servers",
      "pr": 2679,
      "type": "correction",
      "status": "candidate",
      "id": "2"
    }
  ],
  "set-the-configuration": [
    {
      "description": "Set default values of the <code>RTCConfiguration</code> dictionary, aligning it with current implementations",
      "pr": 2691,
      "type": "correction",
      "status": "candidate",
      "id": "1"
    },
    {
      "description": "Validate ICE transport settings upfront when setting a configuration",
      "pr": 2689,
      "type": "correction",
      "status": "candidate",
      "id": 6
    }
  ],
  "rtcicegatheringstate-description": [
    {
      "description": "Update <code>RTCIceGatheringState</code> to clarify the relevant transport it represents",
      "pr": 2680,
      "type": "correction",
      "status": "candidate",
      "id": "3"
    }
  ],
  "rtcpeerconnectionstate-description": [
    {
      "description": "Update <code>RTCPeerConnectionState</code> to clarify the relevant transport it represents",
      "pr": 2680,
      "type": "correction",
      "status": "candidate",
      "id": "3"
    },
    {
      "description": "Ensure the <code>connecting</code> state happens whenever a ICE or DTLS transport is new ",
      "pr": 2687,
      "type": "correction",
      "status": "candidate",
      "id": "4"
    }
  ],
  "rtciceconnectionstate-description": [
    {
      "description": "Update <code>RTCIceConnectionState</code> to clarify the relevant transport it represents",
      "pr": 2680,
      "type": "correction",
      "status": "candidate",
      "id": "3"
    }
  ],
  "apply-description-restrictions": [
    {
      "description": "Forbid ICE gathering and connectivity checks on administrative prohibited candidates",
      "difftype": "append",
      "pr": 2708,
      "type": "correction",
      "status": "candidate",
      "id": "5"
    }
  ],
  "rtccertificateexpiration-dictionary": [
    {
      "description": "Replace <code>DOMTimeStamp</code> in the definition of the <code>RTCCertificateExpiration.expires</code> and of <code>RTCCertificate.expires</code>, and change its origin to certificate creation time",
      "pr": [2686, 2700],
      "type": "correction",
      "status": "candidate",
      "id": 7
    }
  ],
  "rtccertificate-interface": [
    {
      "description": "Replace <code>DOMTimeStamp</code> in the definition of the <code>RTCCertificateExpiration.expires</code> and of <code>RTCCertificate.expires</code>, and change its origin to certificate creation time",
      "pr": [2686, 2700],
      "type": "correction",
      "status": "candidate",
      "id": 7
    }
  ],
  "rtcicetransportstate-failed-description": [
    {
      "description": "Put ICE transport connection in <code>failed</code> state when no candidates are received",
      "pr": 2704,
      "type": "correction",
      "status": "candidate",
      "id": 8
    }
  ]
}
